angular.module("a2o4.storage",[]).factory("cacheService",["$window","$q","$timeout",function($window,$q,$timeout){var cacheStorage=function(){},repository=function(){var POLY_FILL={};POLY_FILL.name="POLY_FILL",POLY_FILL.dbName="cacheDB",POLY_FILL.entityName="cacheTable",POLY_FILL.options={},POLY_FILL.db={},POLY_FILL.open=function(){var deferred=$q.defer();return POLY_FILL.dbName=POLY_FILL.options.dbName,POLY_FILL.entityName=POLY_FILL.options.entityName,$timeout(function(){deferred.resolve(POLY_FILL)}),deferred.promise},POLY_FILL.save=POLY_FILL.setItem=function(key,value){var deferred=$q.defer(),savedStatus=!1;return key?(POLY_FILL.db[key]=value,savedStatus=!0,$timeout(function(){POLY_FILL.removeItem(key)},POLY_FILL.options.maxAge)):console.warn("key should be a valid truthy"),$timeout(function(){deferred.resolve(savedStatus)}),deferred.promise},POLY_FILL.get=POLY_FILL.getItem=function(key){var deferred=$q.defer(),data=POLY_FILL.db[key];return $timeout(data?function(){deferred.resolve(data)}:function(){deferred.resolve(null)}),deferred.promise},POLY_FILL.remove=POLY_FILL.removeItem=function(key){var deferred=$q.defer();return POLY_FILL.db.hasOwnProperty(key)?(POLY_FILL.db[key]=null,$timeout(function(){deferred.resolve()})):deferred.reject(),deferred.promise},POLY_FILL.length=function(){var key,deferred=$q.defer(),size=0;for(key in POLY_FILL.db)POLY_FILL.db.hasOwnProperty(key)&&size++;return $timeout(function(){deferred.resolve(size)}),deferred.promise},POLY_FILL.clear=function(){var key,deferred=$q.defer();try{for(key in POLY_FILL.db)POLY_FILL.db.hasOwnProperty(key)&&delete POLY_FILL.db[key];console.log("POLY_FILL "+POLY_FILL.dbName+" data cleared"),$timeout(function(){deferred.resolve()})}catch(e){$timeout(function(){deferred.reject()})}return deferred.promise};var storeQuotaExceeded=function(e){var quotaExceeded=!1;if(e)if(e.code)switch(e.code){case 22:quotaExceeded=!0;break;case 1014:"NS_ERROR_DOM_QUOTA_REACHED"===e.name&&(quotaExceeded=!0)}else-2147024882===e.number&&(quotaExceeded=!0);return quotaExceeded},saveHandle=function(storeType,key,value){var clearCache;try{storeType.db.setItem(key,value)}catch(e1){if(storeType.storeQuotaExceeded(e1)){var deletedCacheCount=0;for(var storeKey in storeType.db)if(storeType.db.getItem(storeKey)){if(deletedCacheCount===storeType.options.deletableCacheItems)break;clearCache&&$timeout.cancel(clearCache),storeType.removeItem(storeKey).then(incrementDeletedCache)}var incrementDeletedCache=function(){deletedCacheCount++}}try{storeType.db.setItem(key,value)}catch(e2){return console.error("error persisting data: "+e2),!1}}return clearCache=$timeout(function(){storeType.removeItem(key)},storeType.options.maxAge),!0},localStorageDB={};localStorageDB.name="localStorage",localStorageDB.dbName="cacheDB",localStorageDB.entityName="cacheTable",localStorageDB.db=$window.localStorage,localStorageDB.storeQuotaExceeded=storeQuotaExceeded,localStorageDB.options={},localStorageDB.open=function(){var deferred=$q.defer();return localStorageDB.dbName=localStorageDB.options.dbName,localStorageDB.entityName=localStorageDB.options.entityName,$timeout(function(){deferred.resolve(localStorageDB.db)}),deferred.promise},localStorageDB.save=localStorageDB.setItem=function(key,value){var deferred=$q.defer();if(key){var savedStatus=saveHandle(localStorageDB,key,value);deferred.resolve(savedStatus)}else deferred.reject();return deferred.promise},localStorageDB.get=localStorageDB.getItem=function(key){var deferred=$q.defer();return data=localStorageDB.db.getItem(key),deferred.resolve(data),deferred.promise},localStorageDB.remove=localStorageDB.removeItem=function(key){var deferred=$q.defer();return localStorageDB.db.removeItem(key),deferred.resolve(),deferred.promise},localStorageDB.length=function(){var deferred=$q.defer(),size=0;return size=localStorageDB.db.length,deferred.resolve(size),deferred.promise},localStorageDB.clear=function(){var deferred=$q.defer();return localStorageDB.db.clear(),deferred.resolve(),console.log("localStorageDB data cleared"),deferred.promise};var localSessionStorage={};localSessionStorage.name="sessionStorage",localSessionStorage.dbName="cacheDB",localSessionStorage.entityName="cacheTable",localSessionStorage.db=$window.sessionStorage,localSessionStorage.storeQuotaExceeded=storeQuotaExceeded,localSessionStorage.options={},localSessionStorage.open=function(){var deferred=$q.defer();return localSessionStorage.dbName=localSessionStorage.options.dbName,localSessionStorage.entityName=localSessionStorage.options.entityName,$timeout(function(){deferred.resolve(localSessionStorage.db)}),deferred.promise},localSessionStorage.save=localSessionStorage.setItem=function(key,value){var deferred=$q.defer();if(key){var savedStatus=saveHandle(localSessionStorage,key,value);deferred.resolve(savedStatus)}else deferred.reject();return deferred.promise},localSessionStorage.get=localSessionStorage.getItem=function(key){var deferred=$q.defer();return data=localSessionStorage.db.getItem(key),deferred.resolve(data),deferred.promise},localSessionStorage.remove=localSessionStorage.removeItem=function(key){var deferred=$q.defer();return localSessionStorage.db.removeItem(key),deferred.resolve(),console.log("localSessionStorage data cleared"),deferred.promise},localSessionStorage.length=function(){var deferred=$q.defer(),size=0;return size=localSessionStorage.db.length,deferred.resolve(size),deferred.promise},localSessionStorage.clear=function(){var deferred=$q.defer();return localSessionStorage.db.clear(),deferred.resolve(),deferred.promise};var localIndexedDB={};localIndexedDB.version=1,localIndexedDB.name="indexedDB",localIndexedDB.dbName="cacheDB",localIndexedDB.entityName="cacheTable",localIndexedDB.options={},localIndexedDB.open=function(){var deferred=$q.defer();if(localIndexedDB.dbName=localIndexedDB.options.dbName,localIndexedDB.entityName=localIndexedDB.options.entityName,localIndexedDB.db)return $timeout(function(){deferred.resolve(localIndexedDB.db)}),deferred.promise;if(!($window.indexedDB=$window.IndexedDB||$window.mozIndexedDB||$window.webkitIndexedDB||$window.msIndexedDB)){var errorMessage="indexedDB not supported on this device";return console.warn(errorMessage),$timeout(function(){deferred.resolve(null)}),deferred.promise}"webkitIndexedDB"in $window&&($window.IDBTransaction=$window.IDBTransaction||$window.webkitIDBTransaction||$window.msIDBTransaction,$window.IDBKeyRange=$window.IDBKeyRange||$window.webkitIDBKeyRange||$window.msIDBKeyRange);var request=$window.indexedDB.open(localIndexedDB.dbName,localIndexedDB.version);return request.onupgradeneeded=function(e){var db=e.target.result;localIndexedDB.db=db,e.target.transaction.onerror=$window.indexedDB.onerror,db.objectStoreNames.contains(localIndexedDB.entityName)&&db.deleteObjectStore(localIndexedDB.entityName),db.createObjectStore(localIndexedDB.entityName),console.log(localIndexedDB.dbName+" indexedDB database created with store: "+localIndexedDB.entityName)},request.onsuccess=function(e){localIndexedDB.db=e.target.result,$timeout(function(){deferred.resolve(localIndexedDB.db)})},request.onerror=function(e){var errorMessage="device might be operating incognito. localIndexedDB couldn't be created/opened. error: "+e.message;console.warn(errorMessage),$timeout(function(){deferred.resolve(null)})},deferred.promise},localIndexedDB.save=localIndexedDB.setItem=function(key,value){var deferred=$q.defer();if(!key)return deferred.reject("invalid key"),deferred.promise;var db=localIndexedDB.db;if(!db){var errorMessage="localIndexedDB is not available";return console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)}),deferred.promise}var trans=db.transaction([localIndexedDB.entityName],"readwrite"),objectStore=trans.objectStore(localIndexedDB.entityName),request=objectStore.put(value,key),savedStatus=!1;return request.onsuccess=function(e){e.target.result&&(savedStatus=!0,$timeout(function(){localIndexedDB.removeItem(key)},localIndexedDB.options.maxAge)),$timeout(function(){deferred.resolve(savedStatus)})},request.onerror=function(e){var errorMessage=value+" couldn't be saved. error: "+e.message;console.warn(errorMessage);var storageRequestSuccess=function(used,remaining){console.log("used quota: "+used+", remaining quota: "+remaining)},storageRequestFailure=function(e){console.log("error requesting storage space: "+e.message)};$window.navigator.webkitTemporaryStorage?$window.navigator.queryUsageAndQuota(storageRequestSuccess,storageRequestFailure):$window.webkitStorageInfo.queryUsageAndQuota($window.webkitStorageInfo.TEMPORARY,storageRequestSuccess,storageRequestFailure),$timeout(function(){deferred.resolve(savedStatus)})},deferred.promise},localIndexedDB.get=localIndexedDB.getItem=function(key){var deferred=$q.defer(),db=localIndexedDB.db;if(!db){var errorMessage="localIndexedDB is not available";return console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)}),deferred.promise}var trans=db.transaction([localIndexedDB.entityName],"readonly"),objectStore=trans.objectStore(localIndexedDB.entityName),request=objectStore.get(key),data=null;return request.onsuccess=function(e){e.target.result&&(data=e.target.result),$timeout(function(){deferred.resolve(data)})},request.onerror=function(e){var errorMessage="couldn't retrieved value for key: "+key+". error: "+e.message;console.warn(errorMessage),$timeout(function(){deferred.resolve(data)})},deferred.promise},localIndexedDB.remove=localIndexedDB.removeItem=function(key){var deferred=$q.defer(),db=localIndexedDB.db;if(!db){var errorMessage="localIndexedDB is not available";return console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)}),deferred.promise}var trans=db.transaction([localIndexedDB.entityName],"readwrite"),objectStore=trans.objectStore(localIndexedDB.entityName),request=objectStore["delete"](key);return request.onsuccess=function(){$timeout(function(){deferred.resolve()})},request.onerror=function(e){var errorMessage="couldn't remove value for key: "+key+". error: "+e.message;console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)})},deferred.promise},localIndexedDB.clear=function(){var deferred=$q.defer(),db=localIndexedDB.db;if(!db){var errorMessage="localIndexedDB is not available";return console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)}),deferred.promise}var trans=db.transaction([localIndexedDB.entityName],"readwrite"),objectStore=trans.objectStore(localIndexedDB.entityName),request=objectStore.clear();return request.onsuccess=function(){console.log(localIndexedDB.dbName+" indexedDB data cleared"),$timeout(function(){deferred.resolve()})},request.onerror=function(e){var errorMessage="couldn't clear content of indexedDB: "+localIndexedDB.dbName+". error: "+e.message;console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)})},request.onblocked=function(e){var errorMessage="couldn't clear content of indexedDB: "+localIndexedDB.dbName+" due to operation being blocked. error: "+e.message;console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)})},deferred.promise},localIndexedDB.length=function(){var deferred=$q.defer(),db=localIndexedDB.db;if(!db){var errorMessage="localIndexedDB is not available";console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)})}var trans=db.transaction([localIndexedDB.entityName],"readwrite"),objectStore=trans.objectStore(localIndexedDB.entityName),request=objectStore.count();return request.onsuccess=function(){$timeout(function(){deferred.resolve(request.result)})},request.onerror=function(e){var errorMessage="couldn't clear compute size of indexedDB: "+localIndexedDB.dbName+". error: "+e.message;console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)})},deferred.promise};var localWebSQL={};localWebSQL.version="1.0",localWebSQL.name="webSQL",localWebSQL.dbName="cacheDB",localWebSQL.entityName="cacheTable",localWebSQL.dbDescription=localWebSQL.dbName,localWebSQL.dbSize=5242880,localWebSQL.entitySize=0,localWebSQL.options={},localWebSQL.open=function(){var deferred=$q.defer();localWebSQL.dbName=localWebSQL.options.dbName,localWebSQL.entityName=localWebSQL.options.entityName;try{if(localWebSQL.db)return $timeout(function(){deferred.resolve()}),deferred.promise;if(!$window.openDatabase){var errorMessage="webSQL not supported on this device";return console.warn(errorMessage),$timeout(function(){deferred.resolve(null)}),deferred.promise}localWebSQL.db=$window.openDatabase(localWebSQL.dbName,localWebSQL.version,localWebSQL.dbDescription,localWebSQL.dbSize),localWebSQL.db.transaction(function(tx){var createTable="CREATE TABLE IF NOT EXISTS "+localWebSQL.entityName+" (cacheKey TEXT PRIMARY KEY, cacheValue TEXT)";tx.executeSql(createTable,[],onsuccess,onfailure)});var onsuccess=function(){$timeout(function(){deferred.resolve(localWebSQL.db)})},onfailure=function(tx,e){var errorMessage="";switch(e.code){case e.SYNTAX_ERR:errorMessage="syntax error has occurred. "+e.message,console.warn(errorMessage);break;default:errorMessage="error creating webSQL table "+localWebSQL.entityName+". error: "+e}console.warn(errorMessage),$timeout(function(){deferred.resolve(null)})}}catch(e){var errorMessage="error creating webSQL database/table. error: "+e;console.warn(errorMessage),$timeout(function(){deferred.resolve(null)})}return deferred.promise},localWebSQL.save=localWebSQL.setItem=function(key,value){var deferred=$q.defer(),errorMessage="";if(key||(errorMessage="invalid key",console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)})),!localWebSQL.db)return errorMessage="localWebSQL.db undefined",console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)}),deferred.promise;var db=localWebSQL.db,savedStatus=!1;db.transaction(function(tx){var insertData="INSERT INTO "+localWebSQL.entityName+" (cacheKey, cacheValue) VALUES (?, ?)";tx.executeSql(insertData,[key,value],oninsertsuccess,onfailure)});var oninsertsuccess=function(){savedStatus=!0,$timeout(function(){localWebSQL.removeItem(key)},localWebSQL.options.maxAge),$timeout(function(){deferred.resolve(savedStatus)})},onfailure=function(tx,e){var errorMessage="";switch(e.code){case e.SYNTAX_ERR:errorMessage="syntax error has occurred. "+e.message,console.warn(errorMessage);break;default:errorMessage="error caching data. error: "+e.message}console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)})};return deferred.promise},localWebSQL.get=localWebSQL.getItem=function(key){var deferred=$q.defer(),errorMessage="";if(!localWebSQL.db)return errorMessage="localWebSQL.db undefined",console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)}),deferred.promise;var db=localWebSQL.db;db.transaction(function(tx){var selectData="SELECT cacheValue FROM "+localWebSQL.entityName+" WHERE cacheKey = ?";tx.executeSql(selectData,[key],onsuccess,onfailure)});var onsuccess=function(tx,result){if(result){var data=null;result.rows&&result.rows.length&&(data=result.rows.item(0).cacheValue),$timeout(function(){deferred.resolve(data)})}},onfailure=function(tx,e){var errorMessage="";switch(e.code){case e.SYNTAX_ERR:errorMessage="syntax error has occurred. "+e.message,console.warn(errorMessage);break;default:errorMessage="error retrieving data. error: "+e.message}console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)})};return deferred.promise},localWebSQL.remove=localWebSQL.removeItem=function(key){var deferred=$q.defer(),errorMessage="";if(!localWebSQL.db)return errorMessage="localWebSQL.db undefined",console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)}),$timeout.flush(),deferred.promise;var db=localWebSQL.db;db.transaction(function(tx){var deleteData="DELETE FROM "+localWebSQL.entityName+" WHERE cacheKey = ?";tx.executeSql(deleteData,[key],onsuccess,onfailure)});var onsuccess=function(){$timeout(function(){deferred.resolve()})},onfailure=function(tx,e){var errorMessage="";switch(e.code){case e.SYNTAX_ERR:errorMessage="syntax error has occurred. "+e.message,console.warn(errorMessage);break;default:errorMessage="error removing data. error: "+e.message}console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)})};return deferred.promise},localWebSQL.clear=function(){var deferred=$q.defer(),errorMessage="";if(!localWebSQL.db)return errorMessage="localWebSQL.db yet to be defined",console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)}),deferred.promise;var db=localWebSQL.db,status=!1;db.transaction(function(tx){var deleteTable="DELETE FROM "+localWebSQL.entityName;tx.executeSql(deleteTable,[],onsuccess,onfailure)});var onsuccess=function(){console.log(localWebSQL.entityName+" table in "+localWebSQL.dbName+" webSQL data cleared"),status=!0,$timeout(function(){deferred.resolve(status)})},onfailure=function(tx,e){var errorMessage="";switch(e.code){case e.SYNTAX_ERR:errorMessage="syntax error has occurred. "+e.message,console.warn(errorMessage);break;default:errorMessage="couldn't clear content of webSQL: "+localWebSQL.entityName+". error: "+e.message}console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)})};return deferred.promise},localWebSQL.length=function(){var deferred=$q.defer(),errorMessage="";localWebSQL.db||(errorMessage="localWebSQL.db undefined",console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)}));var db=localWebSQL.db;db.transaction(function(tx){var tableSize="SELECT COUNT(*) AS Size from "+localWebSQL.entityName;tx.executeSql(tableSize,[],onsuccess,onfailure)});var onsuccess=function(tx,result){result&&result.rows&&$timeout(function(){deferred.resolve(result.rows.item(0).Size)})},onfailure=function(tx,e){var errorMessage="";switch(e.code){case e.SYNTAX_ERR:errorMessage="syntax error has occurred. "+e.message,console.warn(errorMessage);break;default:errorMessage="error computing current cache size. error: "+e.message}console.warn(errorMessage),$timeout(function(){deferred.reject(errorMessage)})};return deferred.promise};var storageExist=function(storageType){var uid=(new Date).valueOf().toString(),savePromise=storageType.save(uid,uid);return savePromise.then(function(){storageType.remove(uid)}),savePromise},store=function(){try{storageExist(localStorageDB).then(function(lsdbSavedStatus){return lsdbSavedStatus?localStorageDB:void storageExist(localSessionStorage).then(function(lssdbSavedStatus){return lssdbSavedStatus?(console.log("attempting sessionStorage client caching"),localSessionStorage):(console.log("attempting POLY_FILL client caching"),POLY_FILL)})})}catch(e){return console.error(e.description),console.warn("....defaulting to POLY_FILL client caching"),POLY_FILL}}(),cacheType={LOCAL_STORAGE:"localStorage",SESSION_STORAGE:"sessionStorage",INDEXED_DB:"indexedDB",WEB_SQL:"webSQL",POLY_FILL:"polyFill"},options={dbName:"cacheDB",entityName:"cacheTable",deletableCacheItems:10,maxAge:6e5,storage:cacheType.POLY_FILL};return{cacheType:cacheType,getStorage:function(){return store},storeQuotaExceeded:storeQuotaExceeded,storageExist:storageExist,options:options,init:function(initData){var deferred=$q.defer();if(initData&&initData.hasOwnProperty("dbName")&&initData.dbName&&(options.dbName=initData.dbName),initData&&initData.hasOwnProperty("entityName")&&initData.entityName&&(options.entityName=initData.entityName),initData&&initData.hasOwnProperty("deletableCacheItems")&&initData.deletableCacheItems&&(options.deletableCacheItems=initData.deletableCacheItems),initData&&initData.hasOwnProperty("maxAge")&&initData.maxAge&&(options.maxAge=initData.maxAge),initData&&initData.hasOwnProperty("cacheType")&&initData.cacheType){options.storage=initData.cacheType;var indexedDBPreprocessor=function(db){$timeout(function(){deferred.resolve(db)}),store=localIndexedDB,console.info("cacheType overriden as indexedDB"),console.log(localIndexedDB.dbName+" indexedDB database opened")},webSQLPreprocessor=function(db){$timeout(function(){deferred.resolve(db)}),store=localWebSQL,console.info("cacheType overriden as webSQL"),console.log(localWebSQL.dbName+" webSQL database opened")},localStoragePreprocessor=function(db){$timeout(function(){deferred.resolve(db)}),store=localStorageDB,console.info("cacheType overriden as localStorage"),console.log(localStorageDB.dbName+" localStorage database opened")},sessionStoragePreprocessor=function(db){$timeout(function(){deferred.resolve(db)}),store=localSessionStorage,console.info("cacheType overriden as sessionStorage"),console.log(localSessionStorage.dbName+" sessionStorage database opened")},polyFillPreprocessor=function(){$timeout(function(){deferred.resolve()}),store=POLY_FILL,angular.toJson("store: "+store),console.info("cacheType overriden as POLY_FILL"),console.log(POLY_FILL.dbName+" POLY_FILL database opened")};try{switch(options.storage){case"indexedDB":$window.indexedDB=$window.IndexedDB||$window.mozIndexedDB||$window.webkitIndexedDB||$window.msIndexedDB,$window.indexedDB&&(localIndexedDB.options=options,localIndexedDB.open().then(function(lidb){lidb?indexedDBPreprocessor(lidb):(localWebSQL.options=options,localWebSQL.open().then(function(lwdb){lwdb?webSQLPreprocessor(lwdb):(localStorageDB.options=options,localStorageDB.open().then(function(lsdb){lsdb?localStoragePreprocessor(lsdb):(localSessionStorage.options=options,localSessionStorage.open().then(function(lssdb){lssdb?sessionStoragePreprocessor(lssdb):(POLY_FILL.options=options,polyFillPreprocessor())}))}))}))}));break;case"webSQL":$window.openDatabase&&(localWebSQL.options=options,localWebSQL.open().then(function(lwdb){lwdb?webSQLPreprocessor(lwdb):(localIndexedDB.options=options,localIndexedDB.open().then(function(lidb){lidb?indexedDBPreprocessor(lidb):(localStorageDB.options=options,localStorageDB.open().then(function(lsdb){lsdb?localStoragePreprocessor(lsdb):(localSessionStorage.options=options,localSessionStorage.open().then(function(lssdb){lssdb?sessionStoragePreprocessor(lssdb):(POLY_FILL.options=options,polyFillPreprocessor())}))}))}))}));break;case"localStorage":$window.localStorage&&(localStorageDB.options=options,localStorageDB.open().then(function(lsdb){lsdb?localStoragePreprocessor(lsdb):(localIndexedDB.options=options,localIndexedDB.open().then(function(lidb){lidb?indexedDBPreprocessor(lidb):(localWebSQL.options=options,localWebSQL.open().then(function(lwdb){lwdb?webSQLPreprocessor(lwdb):(localSessionStorage.options=options,localSessionStorage.open().then(function(lssdb){lssdb?sessionStoragePreprocessor(lssdb):(POLY_FILL.options=options,polyFillPreprocessor())}))}))}))}));break;case"sessionStorage":$window.sessionStorage&&(localSessionStorage.options=options,localSessionStorage.open().then(function(lssdb){lssdb?sessionStoragePreprocessor(lssdb):(localIndexedDB.options=options,localIndexedDB.open().then(function(lidb){lidb?indexedDBPreprocessor(lidb):(localWebSQL.options=options,localWebSQL.open().then(function(lwdb){lwdb?webSQLPreprocessor(lwdb):(localStorageDB.options=options,localStorageDB.open().then(function(lsdb){lsdb?localStoragePreprocessor(lsdb):(POLY_FILL.options=options,polyFillPreprocessor())}))}))}))}));break;case"polyFill":POLY_FILL.options=options,POLY_FILL.open().then(function(){polyFillPreprocessor()})}return deferred.promise}catch(e){store=POLY_FILL,store.options=options,console.warn("chosen cacheType probably not supported...using POLY_FILL as fallback cacheType. error: "+e)}}},save:function(key,value){return store.save(key,value)},remove:function(key){return store.remove(key)},get:function(key){return store.get(key)},length:function(){return store.length()},clear:function(){return store.clear()}}},singleton=repository();return cacheStorage.prototype.instance=function(){return repository()},{getNewInstance:function(){return(new cacheStorage).instance()},create:function(){return singleton}}}]);
//# sourceMappingURL=angular-cache-service.min.js.map
